"""
匿名函数的两种形式：函数作为参数传递与lambda表达式

1. 
函数作为参数传递：将函数作为参数传递给另一个函数，在另一个函数中调用该函数
格式：
    def 函数名1(参数1, 参数2, ...):
        函数体
    
    def 函数名2(函数名1):
        包含函数名1的函数体

    函数名2(函数名1)
注：
函数2需要一个函数作为参数，这个函数需要接收多个参数进行处理，处理逻辑由该函数决定
函数1需要接收多个参数，其作为参数，传递给函数2
最终，函数2会调用函数1，并处理函数1的返回值
这是一种计算逻辑的传递，而非数据的传递

2. 
lambda表达式：定义匿名函数，即没有名字的函数
def关键字可以定义带有名称的函数，而lambda关键字可以定义匿名函数
匿名函数即lambda表达式一般只能使用一次
格式：
    lambda 参数1, 参数2, ...: 表达式
注：
参数1, 参数2, ...：表示匿名函数的形式参数
表达式即函数体，函数体只能写一行代码，且该行代码的执行结果即为匿名函数的返回值

"""

# 1. 函数作为参数传递
def add(x, y):
    return x + y

def sub(x, y):
    return x - y

def calc(func, a, b):
    return func(a, b)

print(calc(add, 1, 2))
print(calc(sub, 1, 2))

# 2. lambda表达式
def calc2(func, a, b):
    return func(a, b)
# 使用lambda表达式定义匿名函数
print(calc2(lambda x, y: x + y, 1, 2))